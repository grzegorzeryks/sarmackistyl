@import url("https://fonts.googleapis.com/css?family=Oswald");
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0;
  padding: 0; }

.clearfix:after {
  content: "";
  display: block;
  clear: both; }

body {
  font-family: 'Oswald', sans-serif;
  letter-spacing: 1.5px;
  background-color: #7a0026; }

header {
  padding-top: 15px; }
  header ul {
    float: left; }
    header ul li {
      display: inline-block;
      margin-left: 20px;
      -webkit-transition: all 1s;
      transition: all 1s; }
      header ul li:hover {
        -webkit-transform: translateY(-5px);
        transform: translateY(-5px); }
      header ul li a {
        color: #dbd9da;
        text-decoration: none;
        -webkit-transition: all 0.5s;
        transition: all 0.5s; }
        header ul li a:hover {
          color: white; }
  header ul:nth-child(2) {
    margin-right: 20px;
    float: right; }

.start {
  margin-top: -15px;
  height: 98vh; }

.crown-logo {
  background: url("../../img/crown_logo.png") no-repeat;
  background-position: center;
  background-size: contain;
  margin: 1% auto;
  width: 30%;
  height: 90vh; }

.background-logo {
  background: url("../../img/back_logo.png") no-repeat;
  background-position: center;
  background-size: contain;
  position: absolute;
  width: 54%;
  height: 83%;
  z-index: -1;
  left: 23%;
  top: 11%;
  -webkit-animation: rotation 19s infinite linear;
  animation: rotation 19s infinite linear; }

@-webkit-keyframes rotation {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg); } }

@keyframes rotation {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg); } }

.graphic {
  height: 100vh;
  background: black; }
  .graphic p {
    width: 20%;
    margin: 0 auto;
    color: white; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJfc2V0dGluZ3Muc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSw4REFBWTtBQUVaO0VBQ0UsK0JBQXNCO0VBQXRCLHVCQUFzQjtFQUN0QixVQUFTO0VBQ1QsV0FBVSxFQUNYOztBQUVEO0VBQ0UsWUFBVztFQUNYLGVBQWM7RUFDZCxZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxrQ0FBaUM7RUFDakMsc0JBQXFCO0VBQ3JCLDBCQ2xCd0IsRURtQnpCOztBQUVEO0VBQ0Usa0JBQWlCLEVBOEJsQjtFQS9CRDtJQUlJLFlBQVcsRUFxQlo7SUF6Qkg7TUFPTSxzQkFBcUI7TUFDckIsa0JBQWlCO01BQ2pCLDJCQUFrQjtNQUFsQixtQkFBa0IsRUFlbkI7TUF4Qkw7UUFZUSxvQ0FBMkI7UUFBM0IsNEJBQTJCLEVBQzVCO01BYlA7UUFnQlEsZUNwQ3FCO1FEcUNyQixzQkFBcUI7UUFDckIsNkJBQW9CO1FBQXBCLHFCQUFvQixFQUtyQjtRQXZCUDtVQXFCVSxhQUFZLEVBQ2I7RUF0QlQ7SUE0QkksbUJBQWtCO0lBQ2xCLGFBQVksRUFDYjs7QUFJSDtFQUNFLGtCQUFpQjtFQUNqQixhQUFZLEVBQ2I7O0FBRUQ7RUFDRSxzREFBcUQ7RUFDckQsNEJBQTJCO0VBQzNCLHlCQUF3QjtFQUN4QixnQkFBZTtFQUNmLFdBQVU7RUFDVixhQUFZLEVBQ2I7O0FBRUQ7RUFDRSxxREFBb0Q7RUFDcEQsNEJBQTJCO0VBQzNCLHlCQUF3QjtFQUN4QixtQkFBa0I7RUFDbEIsV0FBVTtFQUNWLFlBQVc7RUFDWCxZQUFXO0VBQ1gsVUFBUztFQUNULFNBQVE7RUFDUixnREFBdUM7RUFBdkMsd0NBQXVDLEVBQ3hDOztBQUVEO0VBQ0U7SUFDRSxnQ0FBdUI7SUFBdkIsd0JBQXVCLEVBQUE7RUFHekI7SUFDRSxrQ0FBeUI7SUFBekIsMEJBQXlCLEVBQUEsRUFBQTs7QUFON0I7RUFDRTtJQUNFLGdDQUF1QjtJQUF2Qix3QkFBdUIsRUFBQTtFQUd6QjtJQUNFLGtDQUF5QjtJQUF6QiwwQkFBeUIsRUFBQSxFQUFBOztBQUk3QjtFQUNFLGNBQWE7RUFDYixrQkMxRndCLEVEZ0d6QjtFQVJEO0lBSUksV0FBVTtJQUNWLGVBQWM7SUFDZCxhQy9GNEIsRURnRzdCIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3NldHRpbmdzJztcclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Pc3dhbGQnKTtcclxuXHJcbioge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi5jbGVhcmZpeDphZnRlciB7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBjbGVhcjogYm90aDtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgZm9udC1mYW1pbHk6ICdPc3dhbGQnLCBzYW5zLXNlcmlmO1xyXG4gIGxldHRlci1zcGFjaW5nOiAxLjVweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItYmc7XHJcbn1cclxuXHJcbmhlYWRlciB7XHJcbiAgcGFkZGluZy10b3A6IDE1cHg7XHJcblxyXG4gIHVsIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG5cclxuICAgIGxpIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBtYXJnaW4tbGVmdDogMjBweDtcclxuICAgICAgdHJhbnNpdGlvbjogYWxsIDFzO1xyXG5cclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBhIHtcclxuICAgICAgICBjb2xvcjogJGZvbnQtbmF2O1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cztcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1bDpudGgtY2hpbGQoMikge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gIH1cclxufVxyXG4vLyBzdGFydCBmaXJzdCBzZWN0aW9uXHJcblxyXG4uc3RhcnQge1xyXG4gIG1hcmdpbi10b3A6IC0xNXB4O1xyXG4gIGhlaWdodDogOTh2aDtcclxufVxyXG5cclxuLmNyb3duLWxvZ28ge1xyXG4gIGJhY2tncm91bmQ6IHVybChcIi4uLy4uL2ltZy9jcm93bl9sb2dvLnBuZ1wiKSBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICBtYXJnaW46IDElIGF1dG87XHJcbiAgd2lkdGg6IDMwJTtcclxuICBoZWlnaHQ6IDkwdmg7XHJcbn1cclxuXHJcbi5iYWNrZ3JvdW5kLWxvZ28ge1xyXG4gIGJhY2tncm91bmQ6IHVybChcIi4uLy4uL2ltZy9iYWNrX2xvZ28ucG5nXCIpIG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNTQlO1xyXG4gIGhlaWdodDogODMlO1xyXG4gIHotaW5kZXg6IC0xO1xyXG4gIGxlZnQ6IDIzJTtcclxuICB0b3A6IDExJTtcclxuICBhbmltYXRpb246IHJvdGF0aW9uIDE5cyBpbmZpbml0ZSBsaW5lYXI7XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgcm90YXRpb24ge1xyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgfVxyXG5cclxuICB0byB7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xyXG4gIH1cclxufVxyXG4vL3NlY29uZCBzZWN0aW9uXHJcbi5ncmFwaGljIHtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIGJhY2tncm91bmQ6ICRjb2xvci1ibGFjayA7XHJcbiAgcHtcclxuICAgIHdpZHRoOiAyMCU7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgfVxyXG59XHJcbiIsIiRjb2xvci1iZzogcmdiKDEyMiwgMCwgMzgpO1xuJGZvbnQtbmF2OiByZ2IoMjE5LCAyMTcsIDIxOCk7XG4kY29sb3ItdGVtcDogcmdiYSgxMzksIDI2LCAyMTgsIC4zMSk7XG4kY29sb3Itd2hpdGU6IHJnYigyNTUsIDI1NSwgMjU1KTtcbiRjb2xvci1ibGFjazogcmdiKDAsIDAsIDApO1xuIl19 */
